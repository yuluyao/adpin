name: Release Build

on:
  push:
    tags:
      - "v*"

# 添加权限配置
permissions:
  contents: write # 允许创建release和上传文件

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        include:
          - os: windows-latest
            output_path: build/windows/x64/runner/Release
            asset_name: windows-release.zip
          - os: macos-latest
            output_path: build/macos/Build/Products/Release
            asset_name: macos-release.zip

    steps:
      - uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.0"
          channel: "stable"
        env:
          FLUTTER_DISABLE_ANALYTICS: true
          ANDROID_SDK_ACCEPT_LICENSES: true

      # macOS 特定的配置
      - name: Configure Flutter (macOS)
        if: matrix.os == 'macos-latest'
        shell: bash
        run: |
          flutter config --enable-macos-desktop
          flutter precache --macos
          flutter create --platforms=macos .
          flutter clean
          flutter pub get
        env:
          FLUTTER_DISABLE_ANALYTICS: true

      # Windows 特定的配置
      - name: Configure Flutter (Windows)
        if: matrix.os == 'windows-latest'
        shell: powershell
        run: |
          New-Item -ItemType Directory -Force -Path "$env:LOCALAPPDATA\flutter"
          Set-Content -Path "$env:LOCALAPPDATA\flutter\settings" -Value '{"analytics-enabled":false}'

      # 使用 powershell 在 Windows 上运行 pub get
      - name: Get dependencies (Windows)
        if: matrix.os == 'windows-latest'
        shell: powershell
        run: |
          flutter pub get
        env:
          FLUTTER_DISABLE_ANALYTICS: true

      - name: Install Apple Certificate
        if: matrix.os == 'macos-latest'
        run: |
          security create-keychain -p "" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          security set-keychain-settings -t 3600 -u build.keychain

      - name: Configure Xcode
        if: matrix.os == 'macos-latest'
        run: |
          # 允许任何开发者证书
          /usr/bin/xcodebuild -workspace macos/Runner.xcworkspace -scheme Runner -configuration Release CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO

      - name: Build for ${{ matrix.os }}
        shell: bash
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            flutter build windows --release
          else
            flutter build macos --release --no-codesign
          fi

      - name: Create Release ZIP
        run: |
          cd ${{ matrix.output_path }}
          7z a -tzip ../../../../../${{ matrix.asset_name }} *

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ matrix.asset_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
